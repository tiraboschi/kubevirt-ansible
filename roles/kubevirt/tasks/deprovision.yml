---
- name: Check that kubevirt-cr.yaml still exists in /tmp
  stat:
    path: "/tmp/kubevirt-cr.yaml"
  register: kubevirt_cr

- name: Render KubeVirt cr
  template:
    src: "kubevirt-cr.yaml.j2"
    dest: "/tmp/kubevirt-cr.yaml"
  when: kubevirt_cr.stat.exists == False

- name: Delete apiservices v1alpha2.subresources.kubevirt.io
  command: "{{ cluster_command }} -n {{ namespace }} delete apiservices v1alpha2.subresources.kubevirt.io --ignore-not-found=true"

- name: Ask the Operator to cleanup KubeVirt
  command: "{{ cluster_command }} delete -f /tmp/kubevirt-cr.yaml --ignore-not-found=true"

- name: Wait until virt-api is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get deployment | grep virt-api || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Wait until virt-api is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get pods | grep virt-api || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Wait until virt-controller is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get deployment | grep virt-controller || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Wait until virt-controller is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get pods | grep virt-controller || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Wait until virt-handler is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get daemonset | grep virt-handler || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Wait until virt-handler is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get pods | grep virt-handler || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Check that kubevirt-operator.yaml still exists in /tmp
  stat:
    path: "/tmp/kubevirt-operator.yaml"
  register: kubevirt_template

- name: Render KubeVirt operator template
  template:
    src: "kubevirt-operator.yaml.j2"
    dest: "/tmp/kubevirt-operator.yaml"
  when: kubevirt_template.stat.exists == False

- name: Delete KubeVirt operator Resources
  command: "{{ cluster_command }} delete -f /tmp/kubevirt-operator.yaml --ignore-not-found=true"

- name: Wait until virt-operator is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get deploy | grep virt-operator || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Wait until virt-operator is deleted
  shell: "{{ cluster_command }} -n {{ namespace }} get pods | grep virt-operator || true"
  register: result
  until: result.stdout == ""
  retries: 24
  delay: 10

- name: Check that kubevirt-config.yaml still exists in /tmp
  stat:
    path: "/tmp/kubevirt-config.yaml"
  register: kubevirt_config

- name: Render KubeVirt cr
  template:
    src: "kubevirt-config.yaml"
    dest: "/tmp/kubevirt-cr.yaml"
  when: kubevirt_config.stat.exists == False

- name: Delete kubevirt feature gates
  shell: "{{ cluster_command }} delete -f {{ kubevirt_template_dir }}/kubevirt-config.yaml -n {{ namespace }}"

- name: Delete KubeVirt namespace
  command: "{{ cluster_command }} delete namespace {{ namespace }} --ignore-not-found=true --wait=false"

- name: Wait until {{ namespace }} namespace dissappears
  shell: "{{ cluster_command }} get ns {{ namespace }} --ignore-not-found"
  register: result
  until: result.stdout == ""
  retries: 20
  delay: 10
