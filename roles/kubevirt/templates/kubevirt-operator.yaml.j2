---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    operator.kubevirt.io: ""
  name: kubevirts.kubevirt.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .status.phase
    name: Phase
    type: string
  group: kubevirt.io
  names:
    kind: KubeVirt
    plural: kubevirts
    shortNames:
    - kv
    - kvs
    singular: kubevirt
  scope: Namespaced
  version: v1alpha2

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubevirt.io:operator
  labels:
    operator.kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - kubevirt.io
    resources:
      - kubevirts
    verbs:
      - get
      - delete
      - create
      - update
      - patch
      - list
      - watch
      - deletecollection
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubevirt-operator
  namespace: {{ namespace }}
  labels:
    operator.kubevirt.io: ""
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubevirt-operator
  namespace: {{ namespace }}
  labels:
    operator.kubevirt.io: ""
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubevirt-operator
    namespace: {{ namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virt-operator
  namespace: {{ namespace }}
  labels:
    operator.kubevirt.io: "virt-operator"
spec:
  replicas: 1
  selector:
      matchLabels:
        operator.kubevirt.io: virt-operator
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
                  [
                    {
                      "key": "CriticalAddonsOnly",
                      "operator": "Exists"
                    }
                  ]
      labels:
        operator.kubevirt.io: virt-operator
        prometheus.kubevirt.io: ""
    spec:
      serviceAccountName: kubevirt-operator
      containers:
        - name: virt-operator
          image: &image {{ docker_prefix }}/virt-operator:{{ docker_tag }}
          imagePullPolicy: {{ image_pull_policy }}
          command:
            - virt-operator
            - --port
            - "8443"
            - -v
            - "2"
          ports:
            - containerPort: 8443
              name: "metrics"
              protocol: "TCP"
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: "metrics"
              path: "/metrics"
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: OPERATOR_IMAGE
              value: *image
      securityContext:
        runAsNonRoot: true
